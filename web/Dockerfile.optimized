# Optimized Web Application Dockerfile
ARG NODE_VERSION=20.11.0
ARG NGINX_VERSION=1.25.3

# ============================================
# Stage 1: Dependencies
# ============================================
FROM node:${NODE_VERSION}-alpine AS dependencies

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies with cache
RUN --mount=type=cache,target=/root/.npm \
    npm ci --no-audit --no-fund

# ============================================
# Stage 2: Builder
# ============================================
FROM node:${NODE_VERSION}-alpine AS builder

WORKDIR /app

# Copy dependencies
COPY --from=dependencies /app/node_modules ./node_modules
COPY package*.json ./

# Copy source code
COPY . .

# Build with optimizations
ENV NODE_ENV=production
RUN npm run build

# ============================================
# Stage 3: Production
# ============================================
FROM nginx:${NGINX_VERSION}-alpine AS production

# Add metadata
LABEL maintainer="IntelliFill Team"
LABEL version="1.0.0"
LABEL description="IntelliFill Web UI"

# Install dumb-init for proper signal handling
RUN apk add --no-cache dumb-init=~1.2

# Create non-root user for nginx
RUN addgroup -g 101 -S nginx 2>/dev/null || true \
    && adduser -S nginx -u 101 -G nginx 2>/dev/null || true

# Copy custom nginx configuration
COPY --chown=nginx:nginx nginx.conf /etc/nginx/nginx.conf
COPY --chown=nginx:nginx default.conf /etc/nginx/conf.d/default.conf

# Copy built application
COPY --from=builder --chown=nginx:nginx /app/dist /usr/share/nginx/html

# Create cache directory for nginx
RUN mkdir -p /var/cache/nginx /var/log/nginx \
    && chown -R nginx:nginx /var/cache/nginx /var/log/nginx \
    && touch /var/run/nginx.pid \
    && chown nginx:nginx /var/run/nginx.pid

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost/ || exit 1

# Switch to non-root user
USER nginx

# Expose port
EXPOSE 80

# Use dumb-init to handle signals
ENTRYPOINT ["dumb-init", "--"]

# Start nginx
CMD ["nginx", "-g", "daemon off;"]