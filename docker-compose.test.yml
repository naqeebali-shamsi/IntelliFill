# Test-specific Docker Compose configuration
# Isolated environment for testing

services:
  # Test Database
  postgres-test:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: intellifill_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_pass
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5433:5432"
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user"]
      interval: 5s
      timeout: 3s
      retries: 3

  # Test Redis
  redis-test:
    image: redis:7-alpine
    command: redis-server --appendonly no
    ports:
      - "6380:6379"
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  # Test Application
  app-test:
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    environment:
      NODE_ENV: test
      DATABASE_URL: postgresql://test_user:test_pass@postgres-test:5432/intellifill_test
      REDIS_URL: redis://redis-test:6379
      JWT_SECRET: test-jwt-secret-key-minimum-64-characters-for-testing-only-not-for-production
      JWT_REFRESH_SECRET: test-refresh-secret-key-minimum-64-characters-for-testing-only-not-for-production
      JWT_ISSUER: test-issuer
      JWT_AUDIENCE: test-audience
      LOG_LEVEL: error
    volumes:
      - ./src:/app/src:ro
      - ./tests:/app/tests:ro
      - ./coverage:/app/coverage
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    networks:
      - test-network
    command: npm run test:ci

networks:
  test-network:
    driver: bridge

volumes:
  test-postgres-data:
  test-redis-data: