#!/bin/bash

# Script to set up GitHub Actions secrets for QuikAdmin/IntelliFill
# This script helps you configure the required secrets for CI/CD

echo "🔐 GitHub Actions Secrets Setup"
echo "================================"
echo ""
echo "This script will help you set up the required secrets for GitHub Actions."
echo "Make sure you have the 'gh' CLI tool installed and authenticated."
echo ""

# Check if gh CLI is available
if ! command -v gh &> /dev/null; then
    echo "❌ GitHub CLI (gh) is not installed."
    echo "Install it from: https://cli.github.com/"
    exit 1
fi

# Check if authenticated
if ! gh auth status &> /dev/null; then
    echo "❌ You are not authenticated with GitHub CLI."
    echo "Run: gh auth login"
    exit 1
fi

REPO="naqeebali-shamsi/IntelliFill"
echo "Setting secrets for repository: $REPO"
echo ""

# Function to generate secure random secret
generate_secret() {
    openssl rand -base64 48 | tr -d '\n'
}

# Function to set a secret
set_secret() {
    local name=$1
    local value=$2
    echo -n "Setting $name... "
    echo "$value" | gh secret set "$name" --repo="$REPO" 2>/dev/null
    if [ $? -eq 0 ]; then
        echo "✅"
    else
        echo "❌ Failed"
    fi
}

echo "Choose what to configure:"
echo "1. Essential secrets (JWT, Database)"
echo "2. Deployment secrets (SSH, Host)"
echo "3. All secrets"
echo "4. Generate example .env file"
echo ""
read -p "Enter your choice (1-4): " choice

case $choice in
    1|3)
        echo ""
        echo "Setting up essential secrets..."
        echo "================================"
        
        # JWT_SECRET
        read -p "Generate JWT_SECRET automatically? (y/n): " gen_jwt
        if [ "$gen_jwt" = "y" ]; then
            JWT_SECRET=$(generate_secret)
            echo "Generated JWT_SECRET: ${JWT_SECRET:0:10}..."
        else
            read -sp "Enter JWT_SECRET (min 64 chars): " JWT_SECRET
            echo ""
        fi
        set_secret "JWT_SECRET" "$JWT_SECRET"
        
        # JWT_REFRESH_SECRET
        read -p "Generate JWT_REFRESH_SECRET automatically? (y/n): " gen_refresh
        if [ "$gen_refresh" = "y" ]; then
            JWT_REFRESH_SECRET=$(generate_secret)
            echo "Generated JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:0:10}..."
        else
            read -sp "Enter JWT_REFRESH_SECRET (min 64 chars): " JWT_REFRESH_SECRET
            echo ""
        fi
        set_secret "JWT_REFRESH_SECRET" "$JWT_REFRESH_SECRET"
        
        # DATABASE_URL
        echo ""
        echo "Database URL format: postgresql://user:password@host:port/database?sslmode=require"
        read -p "Enter DATABASE_URL: " DATABASE_URL
        set_secret "DATABASE_URL" "$DATABASE_URL"
        
        # REDIS_URL
        echo "Redis URL format: redis://user:password@host:port"
        read -p "Enter REDIS_URL (or press Enter to skip): " REDIS_URL
        if [ ! -z "$REDIS_URL" ]; then
            set_secret "REDIS_URL" "$REDIS_URL"
        fi
        ;;&  # Fall through if choice was 3
        
    2|3)
        if [ "$choice" != "3" ]; then
            echo ""
            echo "Setting up deployment secrets..."
            echo "================================"
        fi
        
        # Deployment secrets
        read -p "Enter deployment host (e.g., your-server.com): " DEPLOY_HOST
        if [ ! -z "$DEPLOY_HOST" ]; then
            set_secret "DEPLOY_HOST" "$DEPLOY_HOST"
        fi
        
        read -p "Enter deployment user (e.g., deploy): " DEPLOY_USER
        if [ ! -z "$DEPLOY_USER" ]; then
            set_secret "DEPLOY_USER" "$DEPLOY_USER"
        fi
        
        echo "For DEPLOY_SSH_KEY, paste your private SSH key (press Ctrl+D when done):"
        DEPLOY_SSH_KEY=$(cat)
        if [ ! -z "$DEPLOY_SSH_KEY" ]; then
            set_secret "DEPLOY_SSH_KEY" "$DEPLOY_SSH_KEY"
        fi
        ;;
        
    4)
        echo ""
        echo "Generating example .env file..."
        cat > .env.example.generated << EOF
# Generated by setup-github-secrets.sh
# Copy this to .env and fill in the values

# Application
NODE_ENV=development
PORT=3002

# JWT Secrets (generate with: openssl rand -base64 48)
JWT_SECRET=$(generate_secret)
JWT_REFRESH_SECRET=$(generate_secret)
JWT_ISSUER=intellifill
JWT_AUDIENCE=intellifill-client

# Database
DATABASE_URL=postgresql://user:password@localhost:5432/intellifill?sslmode=require

# Redis (optional)
REDIS_URL=redis://localhost:6379

# Deployment (for production)
DEPLOY_HOST=your-server.com
DEPLOY_USER=deploy
EOF
        echo "✅ Generated .env.example.generated"
        echo "Copy this file to .env and update with your values"
        ;;
        
    *)
        echo "Invalid choice"
        exit 1
        ;;
esac

echo ""
echo "🎉 Setup complete!"
echo ""
echo "To verify your secrets, run:"
echo "  gh secret list --repo=$REPO"
echo ""
echo "To test the CI pipeline, run:"
echo "  git push origin main"
echo ""