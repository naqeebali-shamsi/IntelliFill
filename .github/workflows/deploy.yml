name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Build and push backend image
        id: build-backend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}-backend
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Build and push frontend image
        id: build-frontend
        uses: docker/build-push-action@v5
        with:
          context: ./web
          file: ./web/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}-frontend
          labels: ${{ steps.meta.outputs.labels }}

  deploy-staging:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: staging
      url: https://staging.intellifill.app
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment"
          echo "Image tag: ${{ needs.build-and-push.outputs.image-tag }}"
          # Add actual deployment commands here
          # For example: ssh deploy@staging "docker pull ... && docker-compose up -d"
      
      - name: Run smoke tests
        run: |
          sleep 30
          curl -f https://staging.intellifill.app/api/health || exit 1

  deploy-production:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    environment:
      name: production
      url: https://intellifill.app
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Deploy to production
        run: |
          echo "Deploying to production environment"
          echo "Image tag: ${{ needs.build-and-push.outputs.image-tag }}"
          # Add actual production deployment commands
      
      - name: Run production smoke tests
        run: |
          sleep 30
          curl -f https://intellifill.app/api/health || exit 1
      
      - name: Create deployment record
        run: |
          echo "Deployment completed at $(date)" >> deployment.log