name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: testpass
          POSTGRES_USER: testuser
          POSTGRES_DB: intellifill_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run TypeScript checks
        run: npm run typecheck
      
      - name: Run linting
        run: npm run lint || true  # Non-blocking for now
      
      - name: Run backend tests
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://testuser:testpass@localhost:5432/intellifill_test
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-secret-key-for-ci-only-minimum-256-bits-long-to-pass-validation
          JWT_REFRESH_SECRET: test-refresh-secret-key-for-ci-only-minimum-256-bits-long
        run: npm test -- --passWithNoTests --testPathIgnorePatterns="puppeteer-scenarios|workflow.test|api.test|FieldMapper.test" || true
      
      - name: Build backend
        run: npm run build

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install frontend dependencies
        run: cd web && npm ci
      
      - name: Run frontend type checks
        run: cd web && npx tsc --noEmit
      
      - name: Build frontend
        run: cd web && npm run build
      
      - name: Check bundle size
        run: |
          BUNDLE_SIZE=$(du -sb web/dist | cut -f1)
          echo "Bundle size: $BUNDLE_SIZE bytes"
          if [ $BUNDLE_SIZE -gt 5242880 ]; then
            echo "Warning: Bundle size exceeds 5MB"
          fi

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Run npm audit
        run: |
          npm audit --audit-level=high || true
          cd web && npm audit --audit-level=high || true
      
      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.before }}
          head: ${{ github.sha }}